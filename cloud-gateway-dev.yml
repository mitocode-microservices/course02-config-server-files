server:
  port: ${CUSTOM.SERVER.PORT:9090}

eureka:
  instance:
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 30
  client:
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA.SERVER.HOSTNAME:http://localhost:8761/eureka}
    fetchRegistry: true

spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          filters:
            - StripPrefix=2
            
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product-service/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: product-cb
                fallbackUri: forward:/api/product-service/product
                statusCodes: 500, 400, 401, 403
            # - AddRequestHeader=token,mitocode
            # - AddResponseHeader=CUSTOM_RESPONSE_HEADER,HEADER_Mitocode
            # - MitocodeFilter=MitocodeKey, MitocodeValue
            # - name: CustomFilter
              # args:
                # headerKey: MitocodeKey
                # headerValue: MitocodeValue


resilience4j:
  circuitbreaker:
    configs:
      mitocodeCircuitbreakerProduct:
        slidingWindowSize: 20
        failureRateThreshold: 75
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 10
        slowCallDurationThreshold: 2s
        slowCallRateThreshold: 10
    instances:
      product-cb:
        base-config: mitocodeCircuitbreakerProduct
  timelimiter:
    configs:
      mitocodeTimeLimiterProduct:
        timeoutDuration: 1s
    instances:
      product-time:
        base-config: mitocodeTimeLimiterProduct